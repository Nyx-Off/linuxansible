# Début du playbook pour effectuer une sauvegarde de plusieurs bases MySQL depuis mysqlreplicat
- name: Sauvegarder les bases des clients et les transférer au serveur de backup
  hosts: mysqlreplicat        # S'exécute uniquement sur le serveur mysqlreplicat
  become: true                # Utilisation de sudo pour les commandes système

  vars:                       # Variables utilisées dans le playbook
    mysql_user: esieeadmin    # Utilisateur MySQL ayant les droits nécessaires pour faire des dumps
    mysql_password: esiee     # Mot de passe MySQL (à sécuriser avec Ansible Vault plus tard)
    db_list:                  # Liste des bases de données à sauvegarder (celles des clients)
      - client1_db
      - client2_db
      - client3_db
      - client4_db
    remote_backup_dir: "/home/esieeadmin/backups"  # Dossier cible pour stocker les dumps sur le serveur backup

  tasks:

    # Tâche 1 : Crée le dossier de sauvegarde sur le serveur backup s'il n'existe pas
    - name: Créer le dossier de backup local s'il n'existe pas
      file:
        path: "{{ remote_backup_dir }}"     # Chemin où les fichiers seront envoyés
        state: directory                    # Crée un dossier s'il n'existe pas
        owner: esieeadmin                   # Propriétaire du dossier
        group: esieeadmin                   # Groupe associé
        mode: '0755'                        # Droits d'accès : lecture/exécution pour tous, écriture pour le propriétaire

    # Tâche 2 : Génère un dump SQL de chaque base listée dans db_list
    - name: Faire un dump des bases MySQL client*
      ansible.builtin.command: >
        mysqldump -u{{ mysql_user }} -p{{ mysql_password }} {{ item }} > /tmp/{{ item }}_backup.sql
      args:
        creates: "/tmp/{{ item }}_backup.sql"   # Évite d'écraser le fichier s’il existe déjà
      loop: "{{ db_list }}"                     # Répète la tâche pour chaque base listée dans db_list

    # Tâche 3 : Transfère chaque fichier dump vers le serveur de sauvegarde avec SCP
    - name: Transférer chaque dump vers le serveur backup via SCP
      ansible.builtin.command: >
        scp /tmp/{{ item }}_backup.sql esieeadmin@172.16.202.26:{{ remote_backup_dir }}
      become_user: esieeadmin                 # Exécute la commande en tant qu’esieeadmin pour utiliser sa clé SSH
      loop: "{{ db_list }}"                   # Répète pour chaque fichier de dump

    # Tâche 4 : Supprime chaque fichier dump après transfert (sécurité/stockage)
    - name: Supprimer les fichiers dump locaux
      file:
        path: "/tmp/{{ item }}_backup.sql"    # Chemin du fichier à supprimer
        state: absent                         # Supprime le fichier s’il existe
      loop: "{{ db_list }}"                   # Répète pour chaque fichier de dump
